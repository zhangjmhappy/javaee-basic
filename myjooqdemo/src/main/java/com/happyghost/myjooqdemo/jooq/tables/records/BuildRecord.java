/*
 * This file is generated by jOOQ.
 */
package com.happyghost.myjooqdemo.jooq.tables.records;


import com.happyghost.myjooqdemo.jooq.tables.Build;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.10.7"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class BuildRecord extends UpdatableRecordImpl<BuildRecord> implements Record4<UInteger, String, String, Integer> {

    private static final long serialVersionUID = 607998914;

    /**
     * Setter for <code>test_demo.build.id</code>. id
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>test_demo.build.id</code>. id
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>test_demo.build.name</code>. 建筑名称
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>test_demo.build.name</code>. 建筑名称
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>test_demo.build.address</code>. 地址
     */
    public void setAddress(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>test_demo.build.address</code>. 地址
     */
    public String getAddress() {
        return (String) get(2);
    }

    /**
     * Setter for <code>test_demo.build.shopId</code>. 店铺id
     */
    public void setShopid(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>test_demo.build.shopId</code>. 店铺id
     */
    public Integer getShopid() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UInteger, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UInteger, String, String, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Build.BUILD.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Build.BUILD.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Build.BUILD.ADDRESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Build.BUILD.SHOPID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getShopid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getShopid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BuildRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BuildRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BuildRecord value3(String value) {
        setAddress(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BuildRecord value4(Integer value) {
        setShopid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BuildRecord values(UInteger value1, String value2, String value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BuildRecord
     */
    public BuildRecord() {
        super(Build.BUILD);
    }

    /**
     * Create a detached, initialised BuildRecord
     */
    public BuildRecord(UInteger id, String name, String address, Integer shopid) {
        super(Build.BUILD);

        set(0, id);
        set(1, name);
        set(2, address);
        set(3, shopid);
    }
}
